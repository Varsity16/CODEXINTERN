#1
m1 = int(input("Enter the marks in the first test: "))
m2 = int(input("Enter the marks in the second test: "))
m3 = int(input("Enter the marks in the third test: "))

# Calculate the total of the best two marks
if m1 > m2:
    if m2 > m3:
        total = m1 + m2
    else:
        total = m1 + m3
elif m1 > m3:
    total = m1 + m2
else:
    total = m2 + m3

avg = total / 2
print("The average of the best two test marks is:", avg)


#2
number = int(input("Enter the Number: "))
temp = number
reverse = 0

while number > 0:
    dig = number % 10
    reverse = reverse * 10 + dig
    number = number // 10

print("The Reverse Number is:", reverse)

if temp == reverse:
    print("The reverse number is a palindrome")
else:
    print("The number is not a palindrome")



#3
def fn(n):
    if n == 1:
        return 0
    elif n == 2:
        return 1
    else:
        return fn(n - 1) + fn(n - 2)

num = int(input("Enter a Number: "))

if num > 0:
    print("fn(", num, ") = ", fn(num), sep="")
else:
    print("Error in input")



#4
s = input("Enter a sentence: ")
w, d, u, l = 0, 0, 0, 0

# Count words
l_w = s.split()
w = len(l_w)

# Count digits, uppercase letters, and lowercase letters
for c in s:
    if c.isdigit():
        d += 1
    elif c.isupper():
        u += 1
    elif c.islower():
        l += 1

# Output the results
print("No of Words: ", w)
print("No of Digits: ", d)
print("No of Uppercase letters: ", u)
print("No of Lowercase letters: ", l)


#5
def insertion_sort(alist):
    for i in range(1, len(alist)):
        temp = alist[i]
        j = i - 1
        while j >= 0 and temp < alist[j]:
            alist[j + 1] = alist[j]
            j -= 1
        alist[j + 1] = temp

# Get input from user
alist = input("Enter the list of numbers: ").split()
alist = [int(x) for x in alist]

# Perform sorting
insertion_sort(alist)

# Display sorted list
print("Sorted List:", alist)



#7
import re

# Without using regular expressions
def isphonenumber(numStr):
    if len(numStr) != 12:
        return False
    for i in range(len(numStr)):
        if i == 3 or i == 7:
            if numStr[i] != "-":
                return False
        else:
            if not numStr[i].isdigit():
                return False
    return True

# Using regular expressions
def chkphonenumber(numStr):
    ph_no_pattern = re.compile(r'^\d{3}-\d{3}-\d{4}$')
    if ph_no_pattern.match(numStr):
        return True
    else:
        return False

# Input
ph_num = input("Enter a phone number (format: XXX-XXX-XXXX): ")

# Without using regular expressions
print("\nWithout using Regular Expression:")
if isphonenumber(ph_num):
    print("Valid phone number")
else:
    print("Invalid phone number")

# Using regular expressions
print("\nUsing Regular Expression:")
if chkphonenumber(ph_num):
    print("Valid phone number")
else:
    print("Invalid phone number")


#11
class Employee:
    def __init__(self):  # Correct constructor name
        self.name = ""
        self.empId = ""
        self.dept = ""
        self.salary = 0

    def getEmpDetails(self):
        self.name = input("Enter Employee name: ")
        self.empId = input("Enter Employee ID: ")
        self.dept = input("Enter Employee Dept: ")
        self.salary = int(input("Enter Employee Salary: "))

    def showEmpDetails(self):
        print("\nEmployee Details")
        print("Name   : ", self.name)
        print("ID     : ", self.empId)
        print("Dept   : ", self.dept)
        print("Salary : ", self.salary)

    def updtSalary(self):
        self.salary = int(input("\nEnter new Salary: "))
        print("Updated Salary:", self.salary)

# Create and use the object
e1 = Employee()
e1.getEmpDetails()
e1.showEmpDetails()
e1.updtSalary()




